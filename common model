<?php
require_once(APPPATH.'third_party/mail/class.phpmailer.php');
require(APPPATH.'third_party/mail/class.smtp.php');

class Common_Model extends CI_Model
{
	function __construct()
    {
        $this->load->database();
		date_default_timezone_set("Asia/Kolkata");
    }

	function allPageData($params=array())
	{
		$user_id=$this->session->userdata('sess_answercart_uid');
		$data = array();

		$property = $this->Common_Model->getData(array('from'=>'ans_property' , 'select'=>'*', 'where'=>"user_id = $user_id  " ));//and  config_complete=1
		$data['property'] = $property;

		return $data;
	}


	function delete_operation($params = array())
	{
		$this->db->where($params['where']);
		$status = $this->db->delete($params['table']);
		//echo $this->db->last_query();
		return $status;
	}

	function getName($params = array())
	{
		$this->db->select($params['select']);
		$this->db->from($params['from']);
		$this->db->where("($params[where])");
		$query_get_list = $this->db->get();
		return $query_get_list->result();
	}

	function getData($params = array())
	{
		$this->db->select($params['select']);
		$this->db->from($params['from']);
		$this->db->where("($params[where])");
		if(!empty($params['limit']))
		{
			$this->db->limit($params['limit']);
		}
		if(!empty($params['order_by']))
		{
			$this->db->order_by($params['order_by']);
		}
		$query_get_list = $this->db->get();
		return $query_get_list->result();
	}

	function add_operation($params = array())
	{
		if(empty($params)) return false;
		$status = $this->db->insert($params['table'], $params['data']);
		if($status){$status = $status = $this->db->insert_id();}
		//echo $this->db->last_query();
		return $status;
	}

	function update_operation($params = array())
	{
		if(empty($params)) return -1;

		$this->db->where($params['condition']);
		$status = $this->db->update($params['table'], $params['data']);
		//echo $this->db->last_query();
		return $status;
	}

	function random_password($password_length=8 , $type = 'both')
	{
		if($type=='number')
			$alphabet = '1234567890';
		else if($type=='alphabet')
			$alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
		else
		$alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
		$password = array();
		$alpha_length = strlen($alphabet) - 1;
		for ($i = 0; $i < $password_length; $i++)
		{
			$n = rand(0, $alpha_length);
			$password[] = $alphabet[$n];
		}
		return implode($password);
	}

	
	/*code by mk*/
	public function SaveRecord($tbl,$data)
	{
		$this->db->insert($tbl, $data);
		if($this->db->affected_rows() != 1){
			return false;
		} else{
			return true;
		}
	}
	public function UpdateRecord($tbl,$data, $id){
		$this->db->where('id', $id);
		$this->db->update($tbl, $data);
		if($this->db->affected_rows() != 1){
			return false;
		} else {
			return true;
		}
	}
    public function deleteData($tbl,$id)
	{
		 $this -> db -> where('id', $id);
         $this -> db -> delete($tbl);
		if($this->db->affected_rows() != 1){
			return false;
		} else{
			return true;
		}
	}



	function getCountry($params=array())
	{
		$this->db
		->select('c.country_id , c.country_name , c.country_short_name , c.country_code')
		->from('country as c')
		->where('status' , 1);
		$result = $this->db->get();
		if($result->num_rows() > 0 )
		{
			$result = $result->result();
			$result = $result;
			return $result;
		}
		else
		{
			return false;
		}
	}

	function getStateOptions($params=array())
	{

		$options = array('' => 'Select State');
		$this->db
		->select('c.state_id , c.state_name')
		->from('state as c')
		->where('status' , 1)
		->where('country_id' , 1)
		->order_by("c.state_name ASC");
		$result = $this->db->get();
		if($result->num_rows() > 0 )
		{
			$result = $result->result();
			$result = $result;
			foreach($result as $c)
			{
				$options[$c->state_id]  = $c->state_name;
			}
			return $options;
		}
		else
		{
			return $options;
		}
	}

	function getServiceOptions($params=array())
	{

		$options = array('' => 'Select Service');
		$this->db
		->select('c.id , c.name')
		->from('service_master as c')
		->where('status' , 1)
		->order_by("c.name ASC");
		$result = $this->db->get();
		if($result->num_rows() > 0 )
		{
			$result = $result->result();
			$result = $result;
			foreach($result as $c)
			{
				$options[$c->id]  = $c->name;
			}
			return $options;
		}
		else
		{
			return $options;
		}
	}

	function getState($params=array())
	{
		$this->db
		->select('c.state_id , c.state_name')
		->from('state as c')
		->where('status' , 1)
		->where('country_id' , 1);
		$result = $this->db->get();
		if($result->num_rows() > 0 )
		{
			$result = $result->result();
			$result = $result;
			return $result;
		}
		else
		{
			return false;
		}
	}

	function getState_City($params=array())
	{
		$this->db
		->select('s.state_id , s.state_name , c.city_name , c.city_name')
		->from('city as c')
		->join('state as s', "s.state_id = c.state_id")
		->where('c.status' , 1)
		->where('s.status' , 1)
		->where('c.country_id' , 1);
		if(!empty($params['city_id']))
		{

			$this->db->where('c.city_id' , $params['city_id']);
		}
		$result = $this->db->get();
		if($result->num_rows() > 0 )
		{
			$result = $result->result();
			$result = $result;
			return $result;
		}
		else
		{
			return false;
		}
	}

}

?>
